name: Terraform Bootstrap Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    - name: Configure GCP Credentials
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    # Generate GitHub App Token for accessing private repos
    - name: Generate GitHub App Token
      id: generate_token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}
        # Optional: specify repository if needed
        repository: dikshagupta12345/main-module

    # Configure git credentials so Terraform can fetch private modules
    - name: Configure Git to use GitHub App Token
      run: |
        git config --global url."https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/".insteadOf "https://github.com/"
        echo "Git configured to use token for GitHub URLs"

    - name: Debug Token Length
      run: |
        echo "Token length: ${#TOKEN}"
        echo "First few chars: ${TOKEN:0:5}..." # For debugging without exposing full token
      env:
        TOKEN: ${{ steps.generate_token.outputs.token }}
    
    - name: Test Git Access with Token
      run: |
        # Test with the rewritten URL (should work due to git config)
        echo "Testing access to repository..."
        git ls-remote https://github.com/dikshagupta12345/main-module.git
        echo "Success! Repository is accessible."
      env:
        TOKEN: ${{ steps.generate_token.outputs.token }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -out=tfplan 

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
